when excluding deletion of low betweenness values, error decr from .5(when perc betw>50) to 
.18(when no betweenness)

edge factor = 10		100						1000
[[[0.47155268144618123, 0.43936470475544875, 0.52796152372509975], repuls=10
 [0.45593298478506772, 0.48792325331950881, 0.48950817809376734], repuls=100
 [0.55588379278904487, 0.48935310598157089, 0.50386392976991135]], repuls=1000
 
 [[0.50389863805076973, 0.41300847748278458, 0.42743518656016632], repuls=10
 [0.5344626571083857, 0.49395592463407345, 0.4260753355720126], repuls=100
 [0.57248206191243967, 0.50347896253707569, 0.49585198198174374]], repuls=1000
 
 [[0.49383831116380961, 0.46954492334091946, 0.4474184309143785], repuls=10
 [0.49598874022719053, 0.52645746232478285, 0.46189304695772526], repuls=100
 [0.43493926534192373, 0.49644842970649417, 0.50449790427687979]]] repuls=1000
 
'edgespring1'
 edge factor=10				100					1000
 [[[0.40892415973644702, 0.42143609014317396, 0.42859405689499697], repuls=1000
 [0.46131827395241243, 0.50393285820283706, 0.49250053088965395]], repuls=10000
 
 [[0.50096069596547799, 0.41297954563402761, 0.47693907061940788], repuls=1000
 [0.50842526975555025, 0.52458777350421049, 0.4384009872532324]], repuls=10000
 
 [[0.42790249786416101, 0.53892930262763294, 0.47604746128315589], repuls=1000
 [0.42544862757782198, 0.55948003747841646, 0.50248757346650041]]] repuls=10000
 
'edgespring1'
 edge factor = 1		10
 [[0.64513927034643526, 0.50531463367417329], repuls factor = 1
 [0.47216795478256007, 0.45567087156882913], repuls factor = 10
 [0.38911368203190211, 0.47478152895716524]]repuls factor = 100
 
'edgespring1'(repulsion factor for entire term)

edge factor= 1			10					100
[[0.84100129619784347, 0.80022764556757098, 0.78930632421198155], repuls factor=1
[0.50611975957437139, 0.29726778502382323, 0.27639553936814432], repuls fatcor = 10
[0.16661891464322978, 0.18334181213861886, 0.18199215740162411], repuls factor = 100
[0.24382976046065694, 0.25627689348648985, 0.25595827152740758]] repuls factor = 1000

'edgespring2'(repulsion factor only for spring part)
edgefactor = 1			10					100
[[0.77703001856665332, 0.79836455086252467, 0.78917919706896855], repuls=1
[0.27274326747320743, 0.25273647634702912, 0.25908509434826504], repuls=10
[0.18518406813373578, 0.18984534926178628, 0.19336148257642824], repuls=100
[0.24116566442089218, 0.25799259517041978, 0.24441480121614667]] repuls=1000
!!edge factor has been retired due to having little effect on error!!

'trial'
 repuls factor=1			10					100					1000
[[0.2496149174996638, 0.26076859754319631, 0.26610392993113041, 0.25626791542661215]]

'trial2'
repuls factor = 1			10					100					1000			
[[0.89837221410458568, 0.58030025960063247, 0.39034824190716555, 0.35616850080750223]]
!!trial 2 method is now retired!!

'linlog'
[[0.26631881831898041]]


'noedge'
repuls factor = 1			10					100
[[0.79094607025989738], [0.25490039426901157], [0.18485435223926069]]

!!!edgefactor has been welcomed back due to lack of effect on error but big effect on layout!!!

dont need k=1 or to average over errors, should average themselves
for random position set random(seed#) to same every time so that this rand parameter 
is always the same, should help with error
check if port leads to cytoscape layout when cytoscape is open before running
can keep G.remove nodes off of the sheet, not needed
knn is a general error checker, k=1 means nothing because   ???

version of repuls methods used:
        if repulstype =='edgespring1':
            edgeforce=degree/distance**2
            # old version used in jupyter
            #edgeforce=edgeforce/edgefactor
            force1=k*k/distance**2+edgeforce
            force1=force1/repulsfactor      
        if repulstype == 'edgespring2':  
            force_edge=degreemat/(distance**2)
            # old version used in jupyter
            #force1=force_edge/edgefactor+(k*k/distance**2)/repulsfactor
            force1=force_edge+(k*k/distance**2)/repulsfactor

kneighbors=3
    error[k] = [[NN_generalization_error(network_layout(G,50,j,i)[0],labels) for i in [1,10,100]]for j in ['edgespring1','edgespring2','trial','linlog','noedge','spring']]
{3: [[0.78493503403172715, 0.61843189787824249, 0.57341333651489268], 
[0.6719864660294228, 0.58692803466413457, 0.58291185928136824], 
[0.5199786440662596, 0.53398322382395969, 0.52601541954200415], 
[0.57286826404625069, 0.52156016069267808, 0.44904394676845638],(linlog shows fluctuation for no diff in input? bc u didnt seed, idiot)
 [0.62295222679555629, 0.57198662428869917, 0.47009675681210772],
 [0.54356891275184349, 0.66048319731096516, 0.49101800792820405]]}
 
 {3: [[0.7784495656718059, 0.61359430325802511, 0.52946031420354644], 
 [0.61742897785919348, 0.53849794250345395, 0.5329321670386673],
 [0.53101556382055659, 0.47335337369354225, 0.54233804968648536],
 [0.55191505154667742, 0.4429525495487564, 0.45296549443963952], 
 [0.65796761296015638, 0.58641052286270301, 0.5690399349934121], 
 [0.62650239253011186, 0.55092460881997263, 0.48541563010934063]],

 4: [[0.73838248231658832, 0.50185320088675578, 0.48498963581221655],
 [0.59042433795918969, 0.5448855839590967, 0.52296460055497174], 
 [0.45404544484711451, 0.4414837989229301, 0.36348690396615502], 
 [0.39789554043874031, 0.47586372049988523, 0.42096581605926719],
 [0.49496232893922953, 0.45393310229872064, 0.39638480355760308],
 [0.62544821615408419, 0.38796956667186855, 0.45246810852014296]],

 6: [[0.61054884871257054, 0.48205172710432886, 0.4585442273275796],
 [0.49346128107766951, 0.48551199369784226, 0.52956307271374548],
 [0.48095406985802513, 0.52441742297975069, 0.47852805679398325],
 [0.48496523611112674, 0.44887618494507775, 0.45496211167122169],
 [0.54146975742688175, 0.36252593682501288, 0.43540702686301647],
 [0.36948996826375657, 0.46694194441390091, 0.50911823334533657]],
 
 7: [[0.6234097096505915, 0.48009399045507006, 0.41808349766981645],
 [0.60146577386519029, 0.44792224651845336, 0.52397346666409716],
 [0.51041437467811268, 0.5068589126422649, 0.44505608474485114], 
 [0.43743044199366132, 0.43110219707707143, 0.50500284388078198],
 [0.55600480640916694, 0.42835872843678002, 0.51939662646389828],
 [0.39993235521165493, 0.45191651284721468, 0.45036221757205719]]}
 
 use of rand.seed()
 
 {3: [[0.78401512871775469, 0.62649878934487468, 0.59599569481868064],
 [0.66048228088080574, 0.61796979735381419, 0.57394488382963016],
 [0.54738973088113951, 0.4809605850643297, 0.5234152417349045],
 [0.49242829582657754, 0.49242829582657754, 0.49242829582657754],
 [0.65650988430887924, 0.63097109239709337, 0.55037728696619925],
 [0.60403302202921272, 0.59898589974712524, 0.49894520859806968]],

 4: [[0.72151195320412376, 0.46941770183851561, 0.42605259560957409], 
 [0.4724302726505677, 0.46743762329959448, 0.36793880542648583], 
 [0.34848295208150937, 0.34498114006632397, 0.33693703932097507],
 [0.35499681793684057, 0.35499681793684057, 0.35499681793684057],
 [0.45501165753070438, 0.44345209933165841, 0.34408401747565298],
 [0.54349843548141497, 0.37550539095457247, 0.3658356902188965]],

 6: [[0.64501085603217223, 0.4419892694164862, 0.4085638425352317], 
 [0.4909646117017652, 0.40954233293947995, 0.36442195141181999], 
 [0.37438121290463644, 0.40091703403852863, 0.41696948738478978],
 [0.41740615180824292, 0.41740615180824292, 0.41740615180824292],
 [0.47603366356810994, 0.40004798108899264, 0.38944626244237202],
 [0.43797564135941514, 0.40155285393808648, 0.39549115725505735]],

 7: [[0.63654607328695512, 0.45857205117247257, 0.42556431359746316],
 [0.46644982941627455, 0.4555017355620371, 0.42146131728900416], 
 [0.39996244582312013, 0.40696289604021829, 0.4314154681344663],
 [0.42499394584270589, 0.42499394584270589, 0.42499394584270589],
 [0.43191788717757285, 0.42399272832317081, 0.40093518970897801],
 [0.43213603515232635, 0.42199415826154352, 0.39596737742904053]]}
 
 {9: [[0.62802790823304677, 0.48040651020599145, 0.49954726309694697],
 [0.50441334873228205, 0.51797339852381186, 0.46606614784325917],
 [0.45651924597799132, 0.49985495275963743, 0.51545933763108354],
 [0.49248306184908552, 0.49248306184908552, 0.49248306184908552],
 [0.55154274864560171, 0.46789475745522102, 0.50252872881337785],
 [0.51946980333655646, 0.50401029604749825, 0.51937729011501099]],

 20: [[0.57302199973978218, 0.52786840800992196, 0.49392805802831741],
 [0.51298331249449747, 0.50404620585192794, 0.4970258167923105], 
 [0.51043548966478125, 0.42591740358307062, 0.44341850705264552],
 [0.46646537554050926, 0.46646537554050926, 0.46646537554050926],
 [0.51192531251641316, 0.4445111565547617, 0.45298183809490344], 
 [0.49949125279000461, 0.46000767226865458, 0.46981316469053547]], 
 
 15: [[0.58108751202688624, 0.51640078138392298, 0.49808486601743218],
 [0.53000255217486536, 0.491401909918039, 0.48353766621160044],
 [0.48696881391694169, 0.45690597100347463, 0.43354565241678233], 
 [0.43298830569117486, 0.43298830569117486, 0.43298830569117486], 
 [0.53798185402789067, 0.51097625493686449, 0.4443431235557187], 
 [0.52953356375077887, 0.43386895772946998, 0.44394266895547507]]}
 
 changed edgespring1 and edgespring2
        if repulstype =='edgespring1':
            edgeforce=degree/distance**2
            # old version used in jupyter
            #edgeforce=edgeforce/edgefactor
            force1=k*k/distance**2+edgeforce/repulsfactor
            force1=force1/repulsfactor      
        if repulstype == 'edgespring2':  
            force_edge=degreemat/(distance**2)
            # old version used in jupyter
            #force1=force_edge/edgefactor+(k*k/distance**2)/repulsfactor
            force1=(force_edge/10+(k*k/distance**2))/repulsfactor        
    error[k] = [[NN_generalization_error(network_layout(G,50,j,i)[0],labels) for i in [1,10,100,1000]]for j in ['edgespring1','edgespring2']]
{9: [[0.62802790823304677, 0.52305072685280174, 0.51303439919350113, 0.52956539023916238], 
[0.51995946591367237, 0.47741990046480232, 0.4919880108364465, 0.50789525528235202]], 

3: [[0.78401512871775469, 0.60304563560212776, 0.52895984799048501, 0.50350250456483236], 
 [0.65397366056792217, 0.63653063321469872, 0.54191102352376463, 0.5219056969938799]],

 4: [[0.72151195320412376, 0.49195993527554549, 0.3709500144404505, 0.35348572782200605], 
 [0.45596521388051625, 0.44500080974841871, 0.35647095838366705, 0.34540999562567087]],

 6: [[0.64501085603217223, 0.43447416866017941, 0.36149599849008174, 0.44341598649184966], 
 [0.46251616914811922, 0.39741663004598649, 0.36356085752470901, 0.4458368461476746]], 
 
 7: [[0.63654607328695512, 0.42900145815172563, 0.38634700559972068, 0.3910361535854322], 
 [0.46194063198918123, 0.44343604423349925, 0.4089093047763821, 0.39793098403010863]]}
 
changed t to normalt/2, increased iter=100,i=100 for edgespring1,2
{4: [[0.4000689184197046], [0.39347495787834574]],
 6: [[0.37757258489605705], [0.38858850056483374]], 
 7: [[0.40115180622766944], [0.39199891536031928]]}
slowing down step size shows little difference in error

changed stepsize back, added extra k term, from k^2 to k^3 
according to http://yifanhu.net/PUB/graph_draw_small.pdf pg 7
to reduce peripheral effect
according to their proof, should not have effect on energy of system
for i=100, edgespring1,2
{4: [[0.33550082372914269], [0.35350791604965703]],
 6: [[0.40889786734761613], [0.43691935187882669]],
 7: [[0.416401682951691], [0.40653261854048039]]}
 
revert back to k^2, try stepsize based on energy function, i=100 for edgespr1,2
{4: [[0.40139635188751732], [0.38991863363487611]], 
6: [[0.43439799109591615], [0.4664304976016761]], 
7: [[0.46052045549954457], [0.46833657982118027]]}

using new centrality parameter, updates methods
    error[k] = [[[NN_generalization_error(network_layout(G,50,j,i,p)[0],labels) for i in [100]]for p in [.99,.5,.01]]for j in ['edgespring1','edgespring2','trial','linlog']]
{4: [[[0.42400901322160844], [0.4669282228371221], [0.41897842163420063]], 
[[0.37996502967503132], [0.36895242410009799], [0.39392463048379733]],
 [[0.38442401060872455], [0.36947261812231824], [0.36297443467179247]], 
 [[0.37635613003735879], [0.44239086086370893], [0.43650352534661185]]],
 6: [[[0.49145802174267084], [0.47042256530415061], [0.4733645653260663]],
 [[0.53950258555226949], [0.51890875990600416], [0.51202661570881702]], 
 [[0.4943937318242716], [0.53194552738376699], [0.47892886809161728]], 
 [[0.47896281706802057], [0.48449826412308172], [0.45651731052938704]]], 
 7: [[[0.49451694268520341], [0.5310180683853889], [0.5029373823525225]], 
 [[0.53798588066532627], [0.52101855651417983], [0.53241034350638827]], 
 [[0.52794964407721745], [0.54854089386955329], [0.5405266459374094]], 
 [[0.52792909020879519], [0.48798953429452696], [0.53803281244430534]]]}

